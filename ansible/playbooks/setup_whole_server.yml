---
- name: Configure server with network, packages, firewall, NFS, and MLflow
  hosts: all
  become: yes
  vars:
    ip_address: "192.168.100.220"
    gateway: "192.168.100.1"
    dns: "8.8.8.8"
    interface: "enp0s3"
    mlflow_repo: "https://github.com/jahangir842/mlflow.git"
    mlflow_dir: "/home/adminit/mlflow"
    docker_compose_version: "v2.36.0"

  tasks:
    - name: Install required packages
      ansible.builtin.dnf:
        name:
          - git
          - nano
          - htop
          - epel-release
          - dnf-plugins-core
          - nfs-utils
        state: present

    - name: Configure network interface
      ansible.builtin.nmcli:
        conn_name: "{{ interface }}"
        ifname: "{{ interface }}"
        type: ethernet
        ip4: "{{ ip_address }}/24"
        gw4: "{{ gateway }}"
        dns4: "{{ dns }}"
        state: present
        method4: manual
      notify: Restart NetworkManager

    - name: Ensure NetworkManager is running
      ansible.builtin.systemd:
        name: NetworkManager
        state: started
        enabled: yes

    - name: Add Docker CE repository
      ansible.builtin.command: dnf config-manager --add-repo https://download.docker.com/linux/rhel/docker-ce.repo
      args:
        creates: /etc/yum.repos.d/docker-ce.repo

    - name: Install Docker and related packages
      ansible.builtin.dnf:
        name:
          - docker-ce
          - docker-ce-cli
          - containerd.io
          - docker-buildx-plugin
          - docker-compose-plugin
        state: present

    - name: Enable and start Docker service
      ansible.builtin.systemd:
        name: docker
        state: started
        enabled: yes

    - name: Install docker-compose
      ansible.builtin.get_url:
        url: "https://github.com/docker/compose/releases/download/{{ docker_compose_version }}/docker-compose-linux-x86_64"
        dest: /usr/local/bin/docker-compose
        mode: '0755'

    - name: Create docker-compose symlink
      ansible.builtin.file:
        src: /usr/local/bin/docker-compose
        dest: /usr/bin/docker-compose
        state: link

    - name: Configure firewall ports
      ansible.builtin.firewalld:
        port: "{{ item }}"
        permanent: yes
        state: enabled
        immediate: yes
      loop:
        - 5432/tcp
        - 5000/tcp

    - name: Enable NFS services in firewall
      ansible.builtin.firewalld:
        service: "{{ item }}"
        permanent: yes
        state: enabled
        immediate: yes
      loop:
        - nfs
        - rpc-bind
        - mountd

    - name: Enable and start NFS server
      ansible.builtin.systemd:
        name: nfs-server
        state: started
        enabled: yes

    - name: Create NFS directories
      file:
        path: "{{ item.path }}"
        state: directory
        owner: "{{ item.owner }}"
        group: "{{ item.group }}"
        mode: "{{ item.mode }}"
      loop:
        - { path: "/mnt/mlflow", owner: "nobody", group: "nobody", mode: "0777" }
        - { path: "/mnt/postgres", owner: "999", group: "999", mode: "0700" }

    - name: Configure NFS exports
      ansible.builtin.copy:
        content: |
          /mnt/mlflow *(rw,sync,no_subtree_check)
          /mnt/postgres *(rw,sync,no_subtree_check)
        dest: /etc/exports
      notify: Reload NFS exports

    - name: Clone MLflow repository
      ansible.builtin.git:
        repo: "{{ mlflow_repo }}"
        dest: "{{ mlflow_dir }}"
        update: yes
      become: no
      become_user: adminit

    - name: Ensure docker-compose is up
      ansible.builtin.command: docker-compose up -d
      args:
        chdir: "{{ mlflow_dir }}/docker_compose_installation"
      become: no
      become_user: adminit

  handlers:
    - name: Restart NetworkManager
      ansible.builtin.systemd:
        name: NetworkManager
        state: restarted

    - name: Reload NFS exports
      ansible.builtin.command: exportfs -a
      changed_when: true

  pre_tasks:
    - name: Ensure adminit user exists
      ansible.builtin.user:
        name: adminit
        state: present
